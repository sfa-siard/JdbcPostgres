name: Create and upload jar file

env:
  PROJECT_NAME: JdbcPostgres

on:
  push:
    tags:
      - v*.**

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set TAG-Env
        run: echo "NAME_TAG=${PROJECT_NAME}-${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Show current application version
        run: ./gradlew cV
      - name: Execute Gradle build
        run: ./gradlew build
      - name: Store reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/
      - name: upload deliverables
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.NAME_TAG }}
          path: build/libs/
          if-no-files-found: error
